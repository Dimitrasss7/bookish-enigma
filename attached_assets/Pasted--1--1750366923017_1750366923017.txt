ехническое задание для создания веб-приложения "Моя Кето Диета"
1. Общие сведения
Название проекта: "Моя Кето Диета"
Аналоги: https://diets.wowketoz.ru/
Цель: Создание персонализированного сервиса по составлению кето-диет с возможностью генерации индивидуальных планов питания и подключением платежной системы.

2. Функциональные требования
2.1 Основные страницы и функционал
Лендинг (главная страница)

Заголовок с УТП (уникальное торговое предложение)

Блок "Что такое кето-диета?" (переработанный контент)

Преимущества кето-диеты (6-8 пунктов)

Кнопка CTA "Получить план питания"

Анкета для генерации диеты (многостраничная форма)

Пол (мужчина/женщина)

Физическая активность (4 варианта)

Предпочитаемые источники белка (множественный выбор)

Любимые овощи (множественный выбор)

Другие продукты (яйца, сыр и т.д.)

Типичный день (активность)

Плохие привычки в питании

Параметры тела (рост, вес, возраст)

Прогресс-бар с % заполнения

Страница результатов

Персонализированные рекомендации

Метаболический возраст

Рекомендуемое количество калорий

Прогноз снижения веса по неделям

Рекомендуемое количество воды

Распределение БЖУ (жиры/белки/углеводы)

Кнопка "Получить полный план на 28 дней"

Страница оплаты

Форма ввода email

Выбор тарифа (примеры):

Базовый: 990 руб. (доступ на 28 дней)

Премиум: 1990 руб. (пожизненный доступ + бонусы)

Платежная форма (подключение Stripe/ЮKassa)

Гарантия возврата денег

Чекбокс согласия на обработку данных

Личный кабинет пользователя

Доступ к плану питания

Прогресс по дням/неделям

Возможность корректировки параметров

История платежей

2.2 Административная панель
Управление пользователями

Просмотр статистики (конверсии, доходы)

Редактирование шаблонов диет

Управление платежами и подписками

3. Технические требования
3.1 Фронтенд
Фреймворк: React.js (Next.js)

Стили: Tailwind CSS + SCSS

Анимации: Framer Motion

Формы: React Hook Form

Валидация: Yup

3.2 Бэкенд
Язык: Node.js (Express/Nest.js)

База данных:

PostgreSQL (основная БД)

Redis (кеширование)

ORM: Prisma/TypeORM

Аутентификация: JWT

3.3 API интеграции
Платежная система: Stripe или ЮKassa

Email-рассылки: SendGrid/Mailchimp

Аналитика: Google Analytics, Yandex.Metrika

3.4 Хостинг
Frontend: Vercel/Netlify

Backend: Heroku/DigitalOcean

База данных: AWS RDS/Heroku Postgres

4. Дизайн-требования
4.1 Общий стиль
Цветовая схема: зеленые/синие тона (ассоциации со здоровьем)

Минималистичный дизайн с акцентами на CTA-элементах

Адаптивный дизайн (mobile-first подход)

4.2 Уникальные элементы
Кастомные иллюстрации (можно сгенерировать через Midjourney/DALL-E)

Анимированные переходы между шагами анкеты

Интерактивные элементы прогресса

Схемы и инфографика по кето-диете

4.3 Контент
Все тексты должны быть уникальными (переработаны или сгенерированы через ChatGPT)

Фотографии блюд: использовать лицензионные стоковые изображения или сгенерированные ИИ

Примеры рецептов должны отличаться от приложенных в ТЗ

5. Базы данных
5.1 Основные таблицы
Пользователи (users)

id, email, password_hash, created_at, last_login

метаданные (имя, возраст, пол и т.д.)

Платежи (payments)

id, user_id, amount, status, payment_date, plan_type

Диеты (diets)

id, user_id, created_at, calories, macros (БЖУ)

параметры генерации (ответы из анкеты)

Дни диеты (diet_days)

id, diet_id, day_number, total_calories

завтрак, обед, ужин (ссылки на рецепты)

Рецепты (recipes)

id, name, ingredients, instructions

calories, protein, fat, carbs

category (завтрак/обед/ужин/перекус)